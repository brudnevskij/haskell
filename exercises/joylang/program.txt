:one [dup null [false] [rest null] if ] def
:count [dup null [drop 0] [rest count 1 +] if] def 
:last [dup one [first][rest last] if] def
:append [dup null [drop][dup rest [first cons] dip append] if] def
:swap[[] cons dip] def
:butlast [dup one
[drop []]
[dup first swap rest butlast cons ]
if] 
def 
[1 2 3 4 5] [12 12] last
